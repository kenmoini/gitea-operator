name: Build Container & Deploy to Quay
on:
  push:
    tags:
      - v*
jobs:
  # Build the Operator
  build-operator:
    name: Build Container
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          quay.io/kenmoini/gitea-operator
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=sha,prefix=,suffix=,format=short
          type=sha,prefix=,suffix=,format=long
          type=raw,value=latest

    - name: Login to Container Registry
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: "${{ secrets.REGISTRY_USERNAME }}"
        password: "${{ secrets.REGISTRY_TOKEN }}"

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        file: ./Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # Build the Operator Bundle
  build-operator-bundle:
    name: Build Operator Bundle
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-operator
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Container Registry
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: "${{ secrets.REGISTRY_USERNAME }}"
        password: "${{ secrets.REGISTRY_TOKEN }}"

    - name: Build the operator bundle
      shell: bash
      run: |
        ./build-bundle.sh

#    - name: Docker meta
#      id: meta
#      uses: docker/metadata-action@v3
#      with:
#        # list of Docker images to use as base name for tags
#        images: |
#          quay.io/kenmoini/gitea-operator-bundle
#        # generate Docker tags based on the following events/attributes
#        tags: |
#          type=ref,event=branch
#          type=ref,event=tag
#          type=sha,prefix=,suffix=,format=short
#          type=sha,prefix=,suffix=,format=long
#          type=raw,value=latest

#    - name: Build and push
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        push: true
#        file: ./bundle.Dockerfile
#        tags: ${{ steps.meta.outputs.tags }}
#        labels: ${{ steps.meta.outputs.labels }}

  # Build the Operator Catalog
  build-operator-catalog:
    name: Build Operator Catalog
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build-operator, build-operator-bundle]
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Container Registry
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: "${{ secrets.REGISTRY_USERNAME }}"
        password: "${{ secrets.REGISTRY_TOKEN }}"

    - name: Build the operator bundle
      shell: bash
      run: |
        ./build-catalog.sh

#    - name: Docker meta
#      id: meta
#      uses: docker/metadata-action@v3
#      with:
#        # list of Docker images to use as base name for tags
#        images: |
#          quay.io/kenmoini/gitea-catalog
#        # generate Docker tags based on the following events/attributes
#        tags: |
#          type=ref,event=branch
#          type=ref,event=tag
#          type=sha,prefix=,suffix=,format=short
#          type=sha,prefix=,suffix=,format=long
#          type=raw,value=latest
#
#    - name: Build and push
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        push: true
#        file: ./bundle.Dockerfile
#        tags: ${{ steps.meta.outputs.tags }}
#        labels: ${{ steps.meta.outputs.labels }}
