apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ _gitea_name }}"
  namespace: "{{ _gitea_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ _gitea_name }}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "{{ _gitea_name }}"
    spec:
      serviceAccountName: "{{ _gitea_name }}"
      containers:
      - name: gitea
        image: "{{ _gitea_image }}:{{ _gitea_image_tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: "{{ _gitea_cpu_request }}"
            memory: "{{ _gitea_memory_request}}"
          limits:
            cpu: "{{ _gitea_cpu_limit}}"
            memory: "{{ _gitea_memory_limit }}"
        volumeMounts:
        - name: gitea-repositories
          mountPath: /gitea-repositories
        - name: gitea-config
          mountPath: /home/gitea/conf
{% if _gitea_extra_volumes | length > 0 %}
{% for vol in _gitea_extra_volumes %}
        - name: "{{ vol.name }}"
          mountPath: "{{ vol.mountPath }}"
{% if vol.readOnly is defined %}
          readOnly: {{ vol.readOnly }}
{% endif %}
{% endfor %}
{% endif %}
{% if _gitea_env_vars | length > 0 %}
        env:
{% for env in _gitea_env_vars %}
        - name: "{{ env.name }}"
          value: "{{ env.value }}"
{% endfor %}
{% endif %}
      volumes:
      - name: gitea-repositories
        persistentVolumeClaim:
          claimName: "{{ _gitea_name }}-pvc"
      - name: gitea-config
        configMap:
          name: "{{ _gitea_name }}-config"
          items:
            - key: app.ini
              path: app.ini
{% if _gitea_extra_volumes | length > 0 %}
{% for vol in _gitea_extra_volumes %}
      - name: "{{ vol.name }}"
        {{ vol.type }}:
          {{ 'secretName' if vol.type == 'secret' else 'name' }}: "{{ vol.targetName }}"
{% if vol.mountItems | length > 0 %}
          items:
{% for mount in vol.mountItems %}
          - key: "{{ mount.key }}"
            path: "{{ mount.path }}"
{% endfor %}
{% endif %}
{% if vol.defaultMode is defined %}
          defaultMode: {{ vol.defaultMode }}
{% endif %}
{% endfor %}
{% endif %}